// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
 	DMux(in=load,sel=address[13],a=groupa,b=groupb);
	DMux(in=groupa,sel=address[12],a=reg1,b=reg2);
	DMux(in=groupb,sel=address[12],a=reg3,b=reg4);
	RAM4K(in=in,load=reg1,address=address[0..11],out=out1);
	RAM4K(in=in,load=reg2,address=address[0..11],out=out2);
	RAM4K(in=in,load=reg3,address=address[0..11],out=out3);
	RAM4K(in=in,load=reg4,address=address[0..11],out=out4);
	Mux16(a=out1,b=out2,sel=address[12],out=groupA);
	Mux16(a=out3,b=out4,sel=address[12],out=groupB);
	Mux16(a=groupA,b=groupB,sel=address[13],out=out);
}
